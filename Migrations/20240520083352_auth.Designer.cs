// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using StoreAPI.Data;

#nullable disable

namespace StoreAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240520083352_auth")]
    partial class auth
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("StoreAPI.Models.category", b =>
                {
                    b.Property<int>("category_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("category_id"));

                    b.Property<string>("category_name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<int>("category_status")
                        .HasColumnType("integer");

                    b.HasKey("category_id")
                        .HasName("categories_pkey");

                    b.ToTable("categories");
                });

            modelBuilder.Entity("StoreAPI.Models.product", b =>
                {
                    b.Property<int>("product_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("product_id"));

                    b.Property<int?>("category_id")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("created_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("modified_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("product_name")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("product_picture")
                        .HasMaxLength(1024)
                        .HasColumnType("character varying(1024)");

                    b.Property<int?>("unit_in_stock")
                        .HasColumnType("integer");

                    b.Property<decimal?>("unit_price")
                        .HasPrecision(18)
                        .HasColumnType("numeric(18)");

                    b.HasKey("product_id")
                        .HasName("products_pkey");

                    b.HasIndex("category_id");

                    b.ToTable("products");
                });

            modelBuilder.Entity("StoreAPI.Models.product", b =>
                {
                    b.HasOne("StoreAPI.Models.category", "category")
                        .WithMany("products")
                        .HasForeignKey("category_id")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("products_category_id_fkey");

                    b.Navigation("category");
                });

            modelBuilder.Entity("StoreAPI.Models.category", b =>
                {
                    b.Navigation("products");
                });
#pragma warning restore 612, 618
        }
    }
}
